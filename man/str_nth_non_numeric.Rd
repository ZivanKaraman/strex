% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract-non-nums.R
\name{str_nth_non_numeric}
\alias{str_nth_non_numeric}
\alias{str_first_non_numeric}
\alias{str_last_non_numeric}
\title{Extract the \code{n}th non-numeric substring from a string.}
\usage{
str_nth_non_numeric(string, n, decimals = FALSE,
  leading_decimals = decimals, negs = FALSE, sci = FALSE,
  commas = FALSE)

str_first_non_numeric(string, decimals = FALSE,
  leading_decimals = decimals, negs = FALSE, sci = FALSE,
  commas = FALSE)

str_last_non_numeric(string, decimals = FALSE,
  leading_decimals = decimals, negs = FALSE, sci = FALSE,
  commas = FALSE)
}
\description{
Extract the \code{n}th non-numeric bit of a string where numbers are optionally
defined with decimals, scientific notation and commas (as separators, not as
an alternative to the decimal point).
}
\details{
\itemize{ \item \code{str_first_non_numeric(...)} is just
\code{str_nth_non_numeric(..., n = 1)}. \item \code{str_last_non_numeric(...)} is just
\code{str_nth_non_numeric(..., n = -1)}. }
}
\examples{
strings <- c("abc123def456", "abc-0.12def.345", "abc.12e4def34.5e9",
"abc1,100def1,230.5", "abc1,100e3,215def4e1,000")
str_nth_non_numeric(strings, n = 2)
str_nth_non_numeric(strings, n = -2, decimals = TRUE)
str_first_non_numeric(strings, decimals = TRUE, leading_decimals = FALSE)
str_last_non_numeric(strings, commas = TRUE)
str_nth_non_numeric(strings, n = 1, decimals = TRUE, leading_decimals = TRUE,
sci = TRUE)
str_first_non_numeric(strings, decimals = TRUE, leading_decimals = TRUE,
sci = TRUE, commas = TRUE, negs = TRUE)

}
